# EagleView API Configuration
EAGLEVIEW_BASE_URL = 'https://sandbox.apicenter.eagleview.com'
EAGLEVIEW_TOKEN_BASE_URL = 'https://apicenter.eagleview.com'
EAGLEVIEW_CLIENT_ID = '0oaspyrs9hmeQbfg82p7'
EAGLEVIEW_CLIENT_SECRET = 'gxYGGR5_pX9FGYgDmyYuhhit6p2gaWmpe7NTZ9KdORJsbKwp4umpQAFzVH7x1nSg-'

# Google Maps API Configuration
GOOGLE_MAPS_API_KEY = 'AIzaSyD5In9JliYp1MTtdIFk7FTg7pb6Qz372eQ'

# OpenAI API Configuration
OPENAI_API_KEY = 'sk-proj-jbauPmnKBqxr6NEDm838T3BlbkFJ1m2MWmV5WWcGAEwZtS6A'
openai.api_key = OPENAI_API_KEY

# SMTP Configuration for Email Sending
SMTP_USER = 'Devin@agiledefensesystems.com'
SMTP_PASSWORD = 'NerdyCowboy88!'
SMTP_SERVER = 'smtp.gmail.com'
SMTP_PORT = 587

# Firebase API Configuration

  "client_id": "764086051850-6qr4p6gpi6hn506pt8ejuq83di341hur.apps.googleusercontent.com",
  "client_secret": "privatekey",
  "refresh_token": "refreshtoken",
  "type": "authorized_user",
  "project_id": "my-project",
  "quota_project_id": "my-quota-project"
}

# Flask App
app = Flask(__name__)
# Generate a strong secret key for your Flask app in production environments
app.config['SECRET_KEY'] = '800566350' 

# ... (Rest of the code: User Management, Forms, EagleView API functions, Routes) 

# Example function to send an email (now using hardcoded credentials - NOT SECURE FOR PRODUCTION)
def send_email(recipient, subject, body):
    with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
        server.starttls()  # Enable secure connection
        server.login(SMTP_USER, SMTP_PASSWORD)
        message = f"Subject: {subject}\n\n{body}"
        server.sendmail(SMTP_USER, recipient, message)


